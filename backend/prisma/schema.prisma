generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Client {
  idClient    Int       @id @default(autoincrement())
  userName    String
  creditCard  Int?
  address     String
  cin         Int
  phoneNum    Int
  email       String
  password    String
  picture     String?
  Orders      Order[]   @relation("ClientOrders")
  Favorites   Favorite[]
  Messages    Message[]
}

model Order {
  idorders      Int       @id @default(autoincrement())
  startDate     String?
  endDate       String?
  clientId      Int
  Client        Client    @relation(fields: [clientId], references: [idClient])
  Workers       Worker[]  @relation("OrderWorkers")
  Products      Product[] @relation("OrderProducts")
}

model Worker {
  idworker     Int       @id @default(autoincrement())
  cin          Int
  creditCard   Int?
  userName     String
  phoneNumber  Int
  email        String?
  password     String?
  rentedProd   String?
  picture      String?
  resume       String?
  rating       Int?
  jobTitle     String?
  hourlyRate   Float?
  available    Boolean?
  address      String?
  ordersId     Int
  latitude     Float?
  longitude    Float?
  status       Boolean?
  comments     String?
  Order        Order     @relation(fields: [ordersId], references: [idorders])
  Messages     Message[]
}

model Product {
  idproducts   Int       @id @default(autoincrement())
  name         String
  category     String
  description  String
  price        Int
  picture      String
  rating       Int
  stock        Int
  numOfRatings Int
  ordersId     Int
  Order        Order     @relation(fields: [ordersId], references: [idorders])
  Favorites    Favorite[]
}

model Favorite {
  clientId    Int
  productsId  Int
  Client      Client    @relation(fields: [clientId], references: [idClient])
  Product     Product   @relation(fields: [productsId], references: [idproducts])
  @@id([clientId, productsId])
}

model Message {
  clientId  Int
  workerId  Int
  content   String?
  Client    Client  @relation(fields: [clientId], references: [idClient])
  Worker    Worker  @relation(fields: [workerId], references: [idworker])
  @@id([clientId, workerId])
}